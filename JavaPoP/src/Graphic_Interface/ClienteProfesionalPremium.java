/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Graphic_Interface;

import static Graphic_Interface.Inicio.RutaUsuarios;
import static Graphic_Interface.Inicio.Usuarios;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.util.ArrayList;
import javapop.Cliente;
import javapop.ClienteProfesional;
import javax.swing.JOptionPane;

/**
 *
 * @author Daniel González González - GISI
 */
public class ClienteProfesionalPremium extends javax.swing.JFrame {

    private static Cliente Cliente;

    /**
     * Creates new form ClienteProfesionalPremium
     */
    public ClienteProfesionalPremium(Cliente Cliente) {
        ClienteProfesionalPremium.Cliente = Cliente;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lbl_Logo = new javax.swing.JLabel();
        btn_Premium = new javax.swing.JButton();
        btn_Cancelar = new javax.swing.JButton();
        lbl_Telefono = new javax.swing.JLabel();
        lbl_Descripción = new javax.swing.JLabel();
        tf_Telefono = new javax.swing.JTextField();
        lbl_Web = new javax.swing.JLabel();
        tf_Horario = new javax.swing.JTextField();
        tf_Web = new javax.swing.JTextField();
        lbl_CP = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        ta_Descripcion = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("JavaPOP - Cliente profesional");

        lbl_Logo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbl_Logo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/JavaPOP_Logo.png"))); // NOI18N

        btn_Premium.setText("Guardar Cambios");
        btn_Premium.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_PremiumActionPerformed(evt);
            }
        });

        btn_Cancelar.setText("Cancelar");
        btn_Cancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_CancelarActionPerformed(evt);
            }
        });

        lbl_Telefono.setText("Teléfono:");

        lbl_Descripción.setText("Descripción:");

        lbl_Web.setText("Web:");

        lbl_CP.setText("Horario:");

        ta_Descripcion.setColumns(20);
        ta_Descripcion.setRows(5);
        jScrollPane1.setViewportView(ta_Descripcion);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(btn_Cancelar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btn_Premium, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lbl_Logo, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lbl_Web, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lbl_Telefono, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lbl_CP, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lbl_Descripción, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(49, 49, 49)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1)
                    .addComponent(tf_Horario)
                    .addComponent(tf_Telefono)
                    .addComponent(tf_Web))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbl_CP)
                            .addComponent(tf_Horario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(8, 8, 8)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbl_Telefono)
                            .addComponent(tf_Telefono, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbl_Web)
                            .addComponent(tf_Web, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lbl_Logo, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_Premium))
                    .addComponent(lbl_Descripción))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btn_Cancelar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
    /**
     * Este método (botón) llama a otro método para comprobar los campos, recoje
     * los datos proporcionados por el usuario y llama a una serie de métodos
     * para realizar el cambio a cliente profesional
     *
     * @param evt
     */
    private void btn_PremiumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_PremiumActionPerformed
        // TODO add your handling code here:
        if (comprobar()) {
            ClienteProfesional cliente = new ClienteProfesional(ta_Descripcion.getText(), tf_Horario.getText(), tf_Telefono.getText(), tf_Web.getText(), Cliente.DNI, Cliente.nombre, Cliente.correo, Cliente.clave, Cliente.cod_postal, Cliente.ciudad, Cliente.tjt_credito, Cliente.CCV);
            Usuarios.add(cliente); //Cogemos los datos adicionales introducidos por el usuario, junto con los ya introducidos durante el registro, y lo añadimos a los usuarios existentes

            eliminarClienteNormal(); //Eliminamos el cliente normal
            guardarUsuario(); //Actualizamos y guardamos los usuarios
            MainMenuCliente.setCliente(cliente); //Actualiza el sistema para que el cliente pase a ser premium sin necesidad de resetear el programa
            Usuarios = readUsers(); //Se actualiza el array list de usuarios
            this.setVisible(false);
            JOptionPane.showMessageDialog(rootPane, "Se realizará un cargo de 30 € a su tarjeta:\n" + Cliente.getTjt_credito(), "Conversión Exitosa", JOptionPane.INFORMATION_MESSAGE);
        }

    }//GEN-LAST:event_btn_PremiumActionPerformed

    /**
     * Este método (botón) vuelve a la ventana anterior
     *
     * @param evt
     */
    private void btn_CancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_CancelarActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
    }//GEN-LAST:event_btn_CancelarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ClienteProfesionalPremium.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ClienteProfesionalPremium.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ClienteProfesionalPremium.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ClienteProfesionalPremium.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ClienteProfesionalPremium(Cliente).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_Cancelar;
    private javax.swing.JButton btn_Premium;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbl_CP;
    private javax.swing.JLabel lbl_Descripción;
    private javax.swing.JLabel lbl_Logo;
    private javax.swing.JLabel lbl_Telefono;
    private javax.swing.JLabel lbl_Web;
    private javax.swing.JTextArea ta_Descripcion;
    private javax.swing.JTextField tf_Horario;
    private javax.swing.JTextField tf_Telefono;
    private javax.swing.JTextField tf_Web;
    // End of variables declaration//GEN-END:variables

    /**
     * Este método llama a otros 2 métodos para comprobar los campos
     * proporcionados por el usuario
     *
     * @return Devuelve true si las comprobaciones son correctas o false si no
     */
    private boolean comprobar() {
        boolean variable = true;
        if (!comprobarTelefono()) {
            variable = false;
        }
        if (!comprobarWeb()) {
            variable = false;
        }
        return variable;
    }

    /**
     * Este método comprueba que se ha introducido el teléfono correctamente
     *
     * @return Devuelve true si la comprobación es correcta o false si no
     */
    private boolean comprobarTelefono() {
        String telefono = tf_Telefono.getText();
        if (telefono.length() == 9) {
            if (compruebaNumero(telefono, "El teléfono ha de ser numérico y con formato:\n123456789", "Error en Teléfono", JOptionPane.ERROR_MESSAGE)) {
                return true;
            }
        }
        JOptionPane.showMessageDialog(rootPane, "El número de Teléfono ha de tener 9 dígitos", "Error en Teléfono", JOptionPane.ERROR_MESSAGE);
        return false;
    }

    /**
     * Este método comprueba que el texto introducido es un número (integer)
     *
     * @param text texto a comprobar
     * @param msg mensaje de error
     * @param error título del mensaje de error
     * @param ERROR_MESSAGE icono del mensaje de error
     * @return Devuelve true si el texto puede convertirse a integer o false si
     * no
     */
    private boolean compruebaNumero(String text, String msg, String error, int ERROR_MESSAGE) {
        try {
            Integer.parseInt(text);
            return true;
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(rootPane, msg, error, ERROR_MESSAGE);
            return false;
        }
    }

    /**
     * Este método comprueba que la web introducida es correcta
     *
     * @return Devuelve true si se introduce correctamente la web con su formato
     * o false si no
     */
    private boolean comprobarWeb() {
        String web = tf_Web.getText();
        if (web.contains("www.")) {
            if (web.endsWith(".com") || web.endsWith(".es") || web.endsWith(".org") || web.endsWith(".net")) {
                return true;
            }
            JOptionPane.showMessageDialog(rootPane, "La web ha de terminar en uno de los siguientes dominios:\n"
                    + "    - .com\n"
                    + "    - .es\n"
                    + "    - .org\n"
                    + "    - .net",
                    "Error en la Web", JOptionPane.ERROR_MESSAGE);
        }
        JOptionPane.showMessageDialog(rootPane, "La web ha de empezar por 'www.'", "Error en la Web", JOptionPane.ERROR_MESSAGE);
        return false;
    }

    /**
     * Este método elimina el cliente normal para poder sustituirlo por el
     * cliente profesional
     */
    private void eliminarClienteNormal() {
        int aux = 0;
        while (aux < Usuarios.size()) {
            if (Cliente.DNI.equals(Usuarios.get(aux).DNI)) {
                Usuarios.remove(aux);
                break;
            }
            aux++;
        }
    }

    /**
     * Este método lee los usuarios que hay en la ruta determinada para poder
     * actualizarlos
     *
     * @return Devuelve un array list de los usuarios
     */
    public static ArrayList<Cliente> readUsers() {
        ArrayList<Cliente> al = new ArrayList();
        boolean cont = true;
        //System.out.println("Entro en metodo");
        try {
            //System.out.println("Entro en TRY");
            ObjectInputStream ois = new ObjectInputStream(new FileInputStream(RutaUsuarios));
            //System.out.println(ois.readObject());
            while (cont != false) {
                Cliente obj = null;
                try {
                    obj = (Cliente) ois.readObject();
                } catch (IOException | ClassNotFoundException e) {
                    //e.printStackTrace();
                }
                if (obj != null) {
                    al.add(obj);
                } else {
                    cont = false;
                }
            }
        } catch (IOException e) {
            // TODO Auto-generated catch block
        }

        return al;
    }

    /**
     * Este método guarda el nuevo cliente premium (profesional)
     */
    private void guardarUsuario() {
        try {
            int i = 0;
            //Menú de la app JavaPoP
            ObjectOutputStream oos = new ObjectOutputStream(new FileOutputStream(RutaUsuarios));
            while (i < Usuarios.size()) {
                oos.writeObject(Usuarios.get(i));
                i++;
            }
        } catch (IOException ex) {
        }
    }
}
